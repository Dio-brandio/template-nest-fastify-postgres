const messageKey = {
  successMessage: 'successMessage',
  documentCreatedMessage: 'documentCreatedMessage',
  loginSuccessMessage: 'loginSuccessMessage',
  logOutSuccessMessage: 'logOutSuccessMessage',
  userCreatedMessage: 'userCreatedMessage',
  verificationsuccess: 'verificationsuccess',
  resetSuccessful: 'resetSuccessful',
  setSuccessful: 'setSuccessful',
  changeSuccessful: 'changeSuccessful',
  formCreateSuccessful: 'formCreateSuccessful',
  formUpdateSuccessful: 'formUpdateSuccessful',
  recordUpdatedSuccessfully: 'recordUpdatedSuccessfully',
  recordDeletedSuccessfully: 'recordDeletedSuccessfully',
  recordCreatedSuccessfully: 'recordCreatedSuccessfully',
  exitPoint: 'exitPoint',
  importedSuccessfully: 'importedSuccessfully',
  requestCompletedSuccessfully: 'requestCompletedSuccessfully',
  positionChanged: 'positionChanged',
  otpSendSuccessfully: 'otpSendSuccessfully',

  verifyOtpForPhone: 'verifyOtpForPhone',
  verifyOtpForEmail: 'verifyOtpForEmail',
  notificationSend: 'notificationSend',

  // Invalid messages
  invalidPassword: 'invalidPassword',
  invalidEmail: 'invalidEmail',
  invalidOperation: 'invalidOperation',
  invalidCredentials: 'invalidCredentials',
  invalidIds: 'invalidIds',
  invalidContact: 'invalidContact',
  invalidCode: 'invalidCode',
  invalidQRCode: 'invalidQRCode',
  invalidVerificationCode: 'invalidVerificationCode',
  invalidId: 'invalidId',
  invalidPhoneAndEmail: 'invalidPhoneAndEmail',

  // Error messages
  validationError: 'validationError',
  internalServerError: 'internalServerError',
  tokenError: 'tokenError',
  genericError: 'genericError',
  profileLimit: 'profileLimit',
  loginTokenMissing: 'loginTokenMissing',
  positionReserved: 'positionReserved',
  thisTypeIsInUse: 'thisTypeIsInUse',
  uploadedFileNotExists: 'uploadedFileNotExists',
  duplicatePositions: 'duplicatePositions',
  insufficientPoints: 'insufficientPoints',
  giftOutOfStock: 'giftOutOfStock',
  errorInSendingMessage: 'errorInSendingMessage',
  firebaseNotInit: 'firebaseNotInit',
  noTokensProvided: 'noTokensProvided',
  isNotValidToken: `isNotValidToken`,
  failedToSendNotification: 'failedToSendNotification',
  // Not messages

  userNotFound: 'userNotFound',
  inactiveUser: 'inactiveUser',
  recordNotCreated: 'recordNotCreated',
  recordNotUpdated: 'recordNotUpdated',
  dataNotFound: 'dataNotFound',
  fileNotFound: 'fileNotFound',
  formNotFound: 'formNotFound',
  recordDoesNotExist: 'recordDoesNotExist',
  unverifiedVerificationCode: 'unverifiedVerificationCode',
  inviolable: 'inviolable',
  inactiveGift: 'inactiveGift',
  inactiveBusinessCard: 'inactiveBusinesCard',
  giftNotAvailable: 'giftNotAvailable',
  // Failure messages
  formExistsWithThisName: 'formExistsWithThisName',
  badRequest: 'badRequest',
  recordAlreadyExist: 'recordAlreadyExist',

  emailPhoneNumberAlreadyExist: 'emailPhoneNumberAlreadyExist ',
  foundContact: 'foundContact',
  failedToAuthenticate: 'failedToAuthenticate',
  alreadyVerified: 'alreadyVerified.',
  expiredVerificationCode: 'expiredVerificationCode',
  newPasswordSameAsOld: 'newPasswordSameAsOld',
  currentpasswordwrong: 'currentpasswordwrong',
  entranceNotExist: 'entranceNotExist',
  notDeleted: 'notDeleted',
  promotionLimit: 'promotionLimit',

  // Misc. Messages
  verificationEmailSent: 'verificationEmailSent',

  // Unauthorized
  unauthorizeResourse: 'unauthorizeResourse',

  // Export Messages
  exportSuccessfully: 'exportSuccessfully',
  pleaseProvideRequiredFields: 'pleaseProvideRequiredFields',
  importSuccessfully: 'importSuccessfully',
  validFile: 'validFile',
  provideExcelFile: 'provideExcelFile',
  latestAppDictionary: 'latestAppDictionary',
  childPreLeaveExist: 'childPreLeaveExist',
  EXITTIMEEXCEEDED: 'EXITTIMEEXCEEDED',
  attendanceExist: 'attendanceExist',
  pdfFileUploadingFail: 'pdfFileUploadingFail',
};

const modelsKey = {
  counters: 'counters',
  users: 'users',
  userotps: 'userotps',
  emailtokens: 'emailtokens',
  permissions: 'permissions',
  admintypes: 'admintypes',
  admins: 'admins',
  business: 'business',
  colorfans: 'colorfans',
  appcontents: 'appcontents',
  invoices: 'invoices',
  apisettings: 'apisettings',
  workareas: 'workareas',
  specializations: 'specializations',
  actions: 'actions',
  banners: 'banners',
  productcategories: 'productcategories',
  product: 'product',
  postcategories: 'postcategories',
  nirlatconsultant: 'nirlatconsultant',
  nirlattips: 'nirlattips',
  onboardingscreens: 'onboardingscreens',
  businesscardtemplate: 'businesscardtemplate',
  businesscard: 'businesscard',
  instructionalcategories: 'instructionalcategories',
  instructionalvideo: 'instructionalvideo',
  combinationtypes: 'combinationtypes',
  colorcombination: 'colorcombination',
  posts: 'posts',
  nirlatgifts: 'nirlatgifts',
  nirlatpromotions: 'nirlatpromotions',
  favouritecolorcombinations: 'favouritecolorcombinations',
  nirlatpromotionclaims: 'nirlatpromotionclaims',
  nirlatgiftorders: 'nirlatgiftorders',
  pointmanagment: 'pointmanagments',
  pointsreport: 'pointsreports',
  eventRegistration: 'eventregistration',
  businesssales: 'businesssales',
  favouritebusinesses: 'favouritebusinesses',
  surveyUserMapping: 'surveyusermapping',
  yellowActions: 'yellowactions',
  toolsActions: 'toolsactions',
  cities: 'cities',
  priceoffers: 'priceoffers',
  pushnotifications: 'pushnotifications',
  notificationlogs: 'notificationlogs',
  usernotifications: 'usernotifications',
  buyMeGiftOrders: 'buymegiftorders',
};

const validationKey = {
  // funtion name
  isRequired: 'isRequired',
  isNotValid: 'isNotValid',
  minLength: 'minLength',
  maxLength: 'maxLength',
  lengthRequired: 'lengthRequired',
  customMessage: 'customMessage',
  //feild key
  email: 'email',
  otp: 'otp',
  name: 'name',
  lastName: 'lastName',
  birthDate: 'birthDate',
  zipCode: 'zipCode',
  firstName: 'firstName',
  userName: 'userName',
  password: 'password',
  token: 'token',
  specialization: 'specialization',
  sfName: 'Salesforce Name',
  system: 'system',
  english: 'english',
  hebrew: 'hebrew',
  arabic: 'arabic',
  sendMsg: 'sendMsg',
  getProducts: 'getProducts',
  getUser: 'getUser',
  updateUser: 'updateUser',
  updateUserCertification: 'updateUserCertification',
  getBusiness: 'getBusiness',
  updateBusiness: 'updateBusiness',
  updateUserService: 'updateUserService',
  updateUserTechConsultant: 'updateUserTechConsultant',
  eventRegistration: 'eventRegistration',
  saleImg: 'saleImg',
  getCategories: 'getCategories',
  getProductInfo: 'getProductInfo',
  userId: 'userId',
  fromDate: 'fromDate',
  untilDate: 'untilDate',
  innerPageToOpen: 'innerPageToOpen',
  pageToOpen: 'pageToOpen',
  bannerName: 'bannerName',
  image: 'image',
  businessId: 'businessId',
  saleInfo: 'saleInfo',
  id: 'id',
  colorCombinationId: 'colorCombinationId',
  note: 'note',
  giftId: 'giftId',
  points: 'points',
  totalGift: 'totalGift',
  postType: 'postType',
  screens: 'screens',
  title: 'title',
  text: 'text',
  postId: 'postId',
  comment: 'comment',
  commentId: 'commentId',
  labelId: 'labelId',
  subComment: 'subComment',
  subCommentId: 'subCommentId',
  repliedId: 'repliedId',
  repliedName: 'repliedName',
  adminType: 'adminType',
  israelId: 'israelId',
  typeName: 'typeName',
  roomName: 'roomName',
  roomWidth: 'roomWidth',
  roomHeight: 'roomHeight',
  roomLength: 'roomLength',
  color: 'color',
  totalPrice: 'totalPrice',
  phoneNumber: 'phoneNumber',
  loginPhones: 'loginPhones',
  city: 'city',
  startDate: 'startDate',
  estimation: 'estimation',
  description: 'description',
  status: 'status',
  clientName: 'clientName',
  businessSfId: 'businessSfId',
  businessName: 'businessName',
  workArea: 'workArea',
  street: 'street',
  houseNumber: 'houseNumber',
  latitude: 'latitude',
  logitude: 'logitude',
  template: 'template',
  registrationPoint: 'registrationPoint',
  personalInfoPoint: 'personalInfoPoint',
  businessCardPoint: 'businessCardPoint',
  nirlatTeamPostPoint: 'nirlatTeamPostPoint',
  createJobOfferPoint: 'createJobOfferPoint',
  birthdayPoint: 'birthdayPoint',
  survayPoint: 'survayPoint',
  scannedInvoicePoint: 'scannedInvoicePoint',
  eventRegistrationPoint: 'eventRegistrationPoint',
  invitationPoint: 'invitationPoint',
  atleastOnePhone: 'atleastOnePhone',
  hexCode: 'hexCode',
  packageId: 'packageId',
  giftName: 'giftName',
};

export { messageKey, modelsKey, validationKey };
